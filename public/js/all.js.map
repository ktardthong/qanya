{"version":3,"sources":["home.js","ngApps.js","postController.js","posts.service.js","profileController.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxfile":"all.js","sourcesContent":["function getFeedCate(slug){\r\n    $.get( \"/getFeed/\", { slug: slug } )\r\n        .done(function( data ) {\r\n            $('#homeFeed').html(data);\r\n        });\r\n}\r\n\r\nfunction ipLogger()\r\n{\r\n    $.getJSON('http://ipinfo.io', function(data){\r\n        return data;\r\n    })\r\n}","//Angular config and modules\r\n\r\nvar app = angular.module('App', ['ngMaterial','flow','angularMoment','firebase'])\r\n\r\n.constant('FirebaseUrl', 'https://qanya.firebaseio.com/')\r\n.config([\"$mdThemingProvider\", function ($mdThemingProvider) {\r\n    $mdThemingProvider.definePalette('slack', {\r\n        '50': 'ffebee',\r\n        '100': 'ffcdd2',\r\n        '200': 'ef9a9a',\r\n        '300': 'e57373',\r\n        '400': 'ef5350',\r\n        '500': '4D394B', // primary colour\r\n        '600': 'e53935',\r\n        '700': 'd32f2f',\r\n        '800': 'c62828',\r\n        '900': 'b71c1c',\r\n        'A100': 'ff8a80',\r\n        'A200': 'ff5252',\r\n        'A400': 'ff1744',\r\n        'A700': 'd50000',\r\n        'contrastDefaultColor': 'light', // whether, by default, text (contrast)\r\n        // on this palette should be dark or light\r\n        'contrastDarkColors': ['50', '100', // hues which contrast should be 'dark' by default\r\n            '200', '300', '400', 'A100'],\r\n        'contrastLightColors': undefined // could also specify this if default was 'dark'\r\n    })\r\n    $mdThemingProvider.theme('default')\r\n        .primaryPalette('slack')\r\n}])\r\n\r\n/*.directive('topicTally',function(){\r\n    return {\r\n\r\n\r\n        //controller: 'PostCtrl as postCtrl',\r\n        scope: {\r\n            author: '='\r\n        },\r\n        templateUrl: '/assets/templates/topic-tally.html'\r\n    }\r\n\r\n})*/\r\n.directive('topicTally', function () {\r\n    return {\r\n        //controller: 'TopicCtrl as topicCtrl',\r\n        restrict: 'EA',\r\n        transclude:   true,\r\n        templateUrl: '/assets/templates/topic-tally.html',\r\n        scope: {\r\n            data: '='\r\n        }\r\n    }\r\n})","angular.module('App')\r\n    .controller('PostCtrl',function($http,$scope, $sce, $mdDialog, $mdMedia,$firebaseObject,$firebaseArray,Topics){\r\n\r\n        var postCtrl = this;\r\n\r\n\r\n        postCtrl.topics = Topics;\r\n\r\n        postCtrl.displayname ={\r\n            'text' :'',\r\n            'saveBtn':  false,\r\n            'alert':    false\r\n        }\r\n\r\n        postCtrl.topicTags      = [];\r\n        postCtrl.postFeedFollow = 'Follow';\r\n        postCtrl.postFollow     = 'Follow';\r\n        postCtrl.topicReply     = '';\r\n\r\n\r\n\r\n        postCtrl.showLogin = function(ev) {\r\n        var useFullScreen = ($mdMedia('sm') || $mdMedia('xs'))  && $scope.customFullscreen;\r\n            $mdDialog.show({              \r\n              templateUrl: 'http://192.168.0.100:8888/login',\r\n              parent: angular.element(document.body),\r\n              targetEvent: ev,\r\n              clickOutsideToClose:true,\r\n              fullscreen: useFullScreen\r\n            })\r\n        }\r\n\r\n\r\n        postCtrl.feedFollowStatus = function(slug)\r\n        {\r\n            $http.post('/feedFollowStatus/', {data: slug})\r\n                .then(function(response){\r\n                    console.log(response);\r\n                    if(response.data == 0)\r\n                    {\r\n                        postCtrl.postFeedFollow = 'follow';\r\n                    }else{\r\n                        postCtrl.postFeedFollow = 'following';\r\n                    }\r\n                });\r\n        }\r\n\r\n\r\n\r\n        //Tags that user follow\r\n        postCtrl.userTagList = function(user_uuid)\r\n        {\r\n            var ref = postCtrl.topics.userUrl(user_uuid).child('follow_tag');\r\n            ref.on(\"value\", function(snapshot) {\r\n\r\n                $http.post('/getTagButton/', {data: snapshot.val()})\r\n                    .then(function(response){\r\n                        console.log(response.data)\r\n                        $('#userTagList').html(response.data)\r\n                })\r\n                console.log(snapshot.val());\r\n                var data = snapshot.val();\r\n                postCtrl.userTags = snapshot.val();\r\n                //$('#userTagList').html(data)\r\n            })\r\n        }\r\n\r\n        //Check the current status on this tag for this user\r\n        postCtrl.followTagStatus = function(user_uuid,tag)\r\n        {\r\n            var followTag = postCtrl.topics.userUrl(user_uuid).child('follow_tag/'+tag);\r\n            followTag.once(\"value\", function(snapshot) {\r\n                if(snapshot.exists()) {\r\n                    postCtrl.tagFollowStatus = 'following';\r\n                }else{\r\n                    postCtrl.tagFollowStatus = 'follow';\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        //Follow Tag\r\n        postCtrl.followTag = function(user_uuid,tag)\r\n        {\r\n            var followTag = postCtrl.topics.userUrl(user_uuid).child('follow_tag/'+tag);\r\n            followTag.once(\"value\", function(snapshot) {\r\n                if(snapshot.exists())\r\n                {\r\n                    postCtrl.topics.userUrl(user_uuid).child('follow_tag/' + tag).remove();\r\n                    postCtrl.tagFollowStatus = 'follow';\r\n                }\r\n                else\r\n                {\r\n                    //Add this tag to user's follow tag list\r\n                    postCtrl.topics.userUrl(user_uuid).child('follow_tag/' + tag).set(moment().format());\r\n                    postCtrl.tagFollowStatus = 'following';\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        //Follow categories\r\n        postCtrl.followCate = function(slug){\r\n\r\n            $http.post('/follow-cate/', {data: slug})\r\n                .then(function(response){\r\n                    console.log(response)\r\n                    if(response.data== 0)\r\n                    {\r\n                        postCtrl.postFeedFollow ='follow';\r\n                    }\r\n                    else\r\n                    {\r\n                        postCtrl.postFeedFollow ='following';\r\n                    }\r\n                });\r\n        }\r\n\r\n\r\n        //Follower user\r\n        //@Params uuid - author ID\r\n        postCtrl.followUser = function(user_uuid,uuid)\r\n        {\r\n            var followStatus = postCtrl.topics.userUrl(user_uuid).child('follow_user/'+uuid);\r\n            followStatus.once(\"value\", function(snapshot) {\r\n                if(snapshot.exists() == false)\r\n                {\r\n                    postCtrl.topics.userUrl(user_uuid).child('follow_user/'+uuid).set(moment().format());\r\n                    postCtrl.postFollow = 'following'\r\n\r\n                    //Update stat for user being follow\r\n                    var followStatus = postCtrl.topics.userUrl(uuid).child('stat/follower/')\r\n                    followStatus.transaction(function (current_value) {\r\n                        return (current_value || 0) + 1;\r\n                    })\r\n                }\r\n                else\r\n                {\r\n                    postCtrl.topics.userUrl(user_uuid).child('follow_user/'+uuid).remove();\r\n                    postCtrl.postFollow = 'follow'\r\n\r\n                    var followStatus = postCtrl.topics.userUrl(uuid).child('stat/follower/')\r\n                    followStatus.transaction(function (current_value) {\r\n                        return (current_value || 0) - 1;\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        //Is currently following user\r\n        //@Params uuid - author ID\r\n        postCtrl.isFollow = function(user_uuid,uuid)\r\n        {\r\n            var followStatus = postCtrl.topics.userUrl(user_uuid).child('follow_user/'+uuid);\r\n            followStatus.once(\"value\", function(snapshot) {\r\n                if(snapshot.exists() == false)\r\n                {\r\n                    postCtrl.postFollow = 'follow'\r\n                }\r\n                else\r\n                {\r\n                    postCtrl.postFollow = 'following'\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        postCtrl.getFeedCate = function(slug,catename){\r\n            postCtrl.slug = slug;\r\n            postCtrl.feedName =  catename;\r\n            $http.post('/getFeed/', {slug: slug})\r\n                .then(function(response){\r\n                    postCtrl.feedHtml = response.data;\r\n                    $('#homeFeed').html(response.data);\r\n                    //postCtrl.FeedHtml = $sce.trustAsHtml(response.data);\r\n                });\r\n        }\r\n\r\n\r\n        postCtrl.checkDisplayname = function(){\r\n\r\n            $http.post('/check-name', {name: postCtrl.displayname.text})\r\n                .then(function(response){\r\n                if(response.data == \"0\"){\r\n                    postCtrl.displayname.saveBtn = true;\r\n                    postCtrl.displayname.alert   = false;\r\n                }else{\r\n                    postCtrl.displayname.saveBtn = false;\r\n                    postCtrl.displayname.alert   = true;\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        //Reply in the post\r\n        postCtrl.postReply = function(uuid,topics_uid,sender)\r\n        {\r\n            var replyObj = 'reply_append_'+uuid;\r\n            $http.post('/replyTopic', {uuid: uuid,\r\n                                       topics_uid: topics_uid,\r\n                                       data: $('#topicReplyContainer').html() })\r\n                .then(function(response){\r\n                    $http.get(\"http://ipinfo.io\")\r\n                        .then(function(response){\r\n                        var geo_data = response\r\n                        $http.post('/ip-logger', {  uuid: uuid,\r\n                            topics_uid: topics_uid,\r\n                            action: 'reply',\r\n                            geoResponse: geo_data\r\n                        })\r\n                    })\r\n                    var commentCounter = postCtrl.topics.ref.child('topic/'+uuid+'/comments')\r\n                    commentCounter.transaction(function (current_value) {\r\n                        return (current_value || 0) + 1;\r\n                    })\r\n                })\r\n        }\r\n\r\n\r\n        //Get all messages for reply in reply\r\n        postCtrl.replyInReplyList = function(reply_id)\r\n        {\r\n            var key = '#replyInReply_'+reply_id;\r\n            $http.post('/replyInReplyList', { reply_id: reply_id })\r\n                .then(function(response){\r\n                    $(key).html(response.data);\r\n                })\r\n\r\n            /*console.log(reply_id);\r\n            var key = 'replyInReply_'+reply_id;\r\n            var messageListRef = postCtrl.topics.ref.child('reply-in-reply/'+reply_id);\r\n            messageListRef.on(\"value\", function(snapshot) {\r\n                console.log(snapshot.val());\r\n                $http.post('/replyInReplyList', {data: snapshot.val().replies})\r\n                    .then(function(response){\r\n                        console.log(response)\r\n                        $('#'+key).html(response.data);\r\n                })\r\n\r\n                postCtrl[key]  = snapshot.val();\r\n            })*/\r\n        }\r\n\r\n        //Submit reply in reply\r\n        postCtrl.submitReplyInReply = function(reply_id,topic_uuid,user_uuid)\r\n        {\r\n            var key = '#replyInReplyContainer_'+reply_id;\r\n            $http.post('/replyInReply', {   uuid: user_uuid,\r\n                                            topics_uuid: topic_uuid,\r\n                                            reply_id: reply_id,\r\n                                            data: $(key).html() })\r\n                .then(function(response){\r\n                    postCtrl.replyInReplyList(reply_id);\r\n                })\r\n        }\r\n\r\n\r\n\r\n        //Post topic\r\n        postCtrl.postTopic = function()\r\n        {\r\n            var imgIds = new Array();\r\n\r\n            //Search for images in the content\r\n            $(\"div#contentBody img\").each(function(){\r\n                imgIds.push($(this).attr('src'));\r\n            });\r\n\r\n\r\n            var data = { title:         postCtrl.title,\r\n                         categories:    postCtrl.categories,\r\n                         tags:          postCtrl.topicTags,\r\n                         body:          $('#contentBody').html(),\r\n                         text:          $('#contentBody').text(),\r\n                         images:        imgIds\r\n                        };\r\n            $.post( \"/api/postTopic/\", { data: data} )\r\n                .done(function( response ) {\r\n                    $http.get(\"http://ipinfo.io\")\r\n                        .then(function(response){\r\n                            var geo_data = response\r\n                            $http.post('/ip-logger', {  uuid: uuid,\r\n                                topics_uid: topics_uid,\r\n                                action: 'topic',\r\n                                geoResponse: geo_data\r\n                            })\r\n                        })\r\n                    url = '/'+response.author+'/'+response.slug;\r\n                    window.location = url;\r\n                })\r\n\r\n        }\r\n\r\n        //Preview images\r\n        postCtrl.imageStrings = [];\r\n        postCtrl.processFiles = function(files){\r\n            angular.forEach(files, function(flowFile, i){\r\n                console.log(flowFile);\r\n                var fileReader = new FileReader();\r\n                fileReader.onload = function (event) {\r\n                    var uri = event.target.result;\r\n                    postCtrl.imageStrings[i] = uri;\r\n                    $.post( \"/api/previewImage/\", { data: uri} )\r\n                        .done(function( response ) {\r\n                            $('#contentBody').append('<img src=\\\"'+response+'\\\" class=\\\"img-fluid\\\">');\r\n                        })\r\n                };\r\n                fileReader.readAsDataURL(flowFile.file);\r\n            });\r\n        };\r\n\r\n        postCtrl.updateTopicContent = function(topic_uuid,topic_id)\r\n        {\r\n            var data = {\r\n                topic_id: topic_id,\r\n                body: $('#topicContent').html(),\r\n                text: $('#topicContent').text()\r\n            }\r\n            $http.post('/updateTopicContent', {data: data })\r\n                .then(function(response){\r\n\r\n                })\r\n\r\n        }\r\n\r\n        //Login for material\r\n        postCtrl.showMdLogin = function(ev) {\r\n            var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;\r\n            $mdDialog.show({\r\n                //controller: 'AuthCtrl as authCtrl',\r\n                //templateUrl: 'templates/html/form-login',\r\n                parent: angular.element(document.body),\r\n                targetEvent: ev,\r\n                clickOutsideToClose: true,\r\n                fullscreen: useFullScreen\r\n            })\r\n        }\r\n\r\n\r\n        postCtrl.getPostImage = function(uuid)\r\n        {\r\n            $http.post('/getPostImages', {uuid: uuid })\r\n                .then(function(response) {\r\n                    console.log(response);\r\n\r\n                    var key = '#previewImage_'+uuid;\r\n                    $(key).html(response.data);\r\n                })\r\n        }\r\n\r\n\r\n        //Count the number of bookmark per topic\r\n        postCtrl.bookMarkTally = function(topic_uuid)\r\n        {\r\n            var ref = postCtrl.topics.ref.child('topic/'+topic_uuid+'/bookmark')\r\n            ref.on(\"value\", function (snapshot) {\r\n                var key = 'bookmarks_'+topic_uuid;\r\n                postCtrl[key]  = snapshot.val();\r\n            });\r\n        }\r\n\r\n        postCtrl.bookMark = function(user_uuid,topic_uuid)\r\n        {\r\n            var userBookmark = postCtrl.topics.userUrl(user_uuid).child('bookmark/'+topic_uuid);\r\n\r\n            userBookmark.once(\"value\", function(snapshot) {\r\n                if(snapshot.exists() == false)\r\n                {\r\n                    postCtrl.topics.userUrl(user_uuid).child('bookmark/'+topic_uuid).set(moment().format());\r\n\r\n                    var topicRef = postCtrl.topics.ref.child('topic/' + topic_uuid + '/bookmark')\r\n                    topicRef.transaction(function (current_value) {\r\n                        return (current_value || 0) + 1;\r\n                    });\r\n                }\r\n                else{\r\n                    postCtrl.topics.userUrl(user_uuid).child('bookmark/'+topic_uuid).remove();\r\n                    var topicRef = postCtrl.topics.ref.child('topic/' + topic_uuid + '/bookmark')\r\n                    topicRef.transaction(function (current_value) {\r\n                        if(current_value < 0 || current_value == 0 )\r\n                        {\r\n                            return 0;\r\n                        }else {\r\n                            return (current_value || 0) - 1;\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n        }\r\n\r\n        postCtrl.commentsTally    =   function(topic_uuid)\r\n        {\r\n            var ref = postCtrl.topics.ref.child('topic/'+topic_uuid+'/comments')\r\n            ref.on(\"value\", function (snapshot) {\r\n                var key = 'comments_'+topic_uuid;\r\n                postCtrl[key]  = snapshot.val();\r\n            });\r\n        }\r\n\r\n        postCtrl.upvoteTally    =   function(topic_uuid)\r\n        {\r\n            var ref = postCtrl.topics.ref.child('topic/'+topic_uuid+'/upvote')\r\n            ref.on(\"value\", function (snapshot) {\r\n                var key = 'upvote_'+topic_uuid;\r\n                postCtrl[key]  = snapshot.val();\r\n            });\r\n        }\r\n\r\n        postCtrl.dwnvoteTally    =   function(topic_uuid)\r\n        {\r\n            var ref = postCtrl.topics.ref.child('topic/'+topic_uuid+'/downvote')\r\n            ref.on(\"value\", function(snapshot) {\r\n                var the_string = 'dwnvote_'+topic_uuid;\r\n                postCtrl[the_string]  = snapshot.val();\r\n            });\r\n        }\r\n\r\n        postCtrl.dwnvote =function(topic_uuid,topic_uid)\r\n        {\r\n            postCtrl.upvoteReset(topic_uuid,topic_uid);\r\n            var btn = \"#dwnvote_btn_status_\"+topic_uuid;\r\n\r\n            //UserDownvote Value\r\n            var userUpvoteRef = postCtrl.topics.userUrl(topic_uid).child('downvote/'+topic_uuid);\r\n            userUpvoteRef.once(\"value\", function(snapshot) {\r\n\r\n                //Chck if user already voted\r\n                if (snapshot.exists() == false) {\r\n\r\n                    postCtrl.topics.userUrl(topic_uid).child('downvote/'+topic_uuid).set(moment().format());\r\n\r\n                    //Topic Upvote tally\r\n                    var topicRef = postCtrl.topics.ref.child('topic/'+topic_uuid+'/downvote')\r\n                    topicRef.transaction(function (current_value) {\r\n                        return (current_value || 0) + 1;\r\n                    });\r\n                }else{ //value already exist\r\n                    postCtrl.dwnvoteReset(topic_uuid,topic_uid);\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n        //Reset upvote to zero\r\n        postCtrl.upvoteReset =function(topic_uuid,topic_uid)\r\n        {\r\n            var btn = \"#upvote_btn_status_\"+topic_uuid;\r\n            //Remove voted user\r\n            postCtrl.topics.userUrl(topic_uid).child('upvote/'+topic_uuid).remove();\r\n\r\n            //Decrement the tally\r\n            var topicRef = postCtrl.topics.ref.child('topic/'+topic_uuid+'/upvote')\r\n            topicRef.transaction(function (current_value) {\r\n                if(current_value < 0 || current_value == 0 )\r\n                {\r\n                    return 0;\r\n                }else{\r\n                    return current_value - 1;\r\n                }\r\n            });\r\n            \r\n        }\r\n\r\n        //Reset downvote to zero\r\n        postCtrl.dwnvoteReset =function(topic_uuid,topic_uid)\r\n        {\r\n            var btn = \"#dwnvote_btn_status_\"+topic_uuid;\r\n            //Remove voted user\r\n            postCtrl.topics.userUrl(topic_uid).child('downvote/'+topic_uuid).remove();\r\n\r\n            //Decrement the tally\r\n            var topicRef = postCtrl.topics.ref.child('topic/'+topic_uuid+'/downvote')\r\n            topicRef.transaction(function (current_value) {\r\n                if(current_value < 0 || current_value == 0 )\r\n                {\r\n                    return 0;\r\n                }else{\r\n                    return current_value - 1;\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        postCtrl.upvote =function(topic_uuid,topic_uid)\r\n        {\r\n            postCtrl.dwnvoteReset(topic_uuid,topic_uid);\r\n            var btn = \"#upvote_btn_status_\"+topic_uuid;\r\n            \r\n            //UserUpvote Value\r\n            var userUpvoteRef = postCtrl.topics.userUrl(topic_uid).child('upvote/'+topic_uuid);\r\n            userUpvoteRef.once(\"value\", function(snapshot) {\r\n\r\n                //Chck if user already voted\r\n                if (snapshot.exists() == false) {\r\n\r\n                    postCtrl.topics.userUrl(topic_uid).child('upvote/'+topic_uuid).set(moment().format());\r\n\r\n                    //Topic Upvote tally\r\n                    var topicRef = postCtrl.topics.ref.child('topic/'+topic_uuid+'/upvote')\r\n                    topicRef.transaction(function (current_value) {\r\n                        return (current_value || 0) + 1;\r\n                    });\r\n\r\n                    //Update stat for poster\r\n                    var followStatus = postCtrl.topics.userUrl(topic_uid).child('stat/upvote/')\r\n                    followStatus.transaction(function (current_value) {\r\n                        return (current_value || 0) + 1;\r\n                    })\r\n\r\n                }else{ //value already exist\r\n                    postCtrl.upvoteReset(topic_uuid,topic_uid);\r\n                    \r\n                    //Update stat for poster\r\n                    var followStatus = postCtrl.topics.userUrl(topic_uid).child('stat/upvote/')\r\n                    followStatus.transaction(function (current_value) {\r\n                        if(current_value < 0 || current_value == 0 )\r\n                        {\r\n                            return 0;\r\n                        }else{\r\n                            return current_value - 1;\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n\r\n            /*$http.post('/upvote/', {    topics_uuid:    topic_uuid,\r\n                                        topic_uid:      topic_uid\r\n                                    })\r\n            .then(function(response){\r\n                console.log(response.data);\r\n                var btn = \"#upvote_btn_status_\"+topic_uuid;\r\n                if(response.data ==1) {\r\n                    $(btn).addClass(\"label label-pill label-success\");\r\n                }else{\r\n                    $(btn).removeClass(\"label label-pill label-success\");\r\n                }\r\n            });*/\r\n        }\r\n    })","angular.module('App')\r\n    // Topic list\r\n    .factory('Topics', function ($firebaseObject, $firebaseArray, FirebaseUrl) {\r\n        var ref = new Firebase(FirebaseUrl)\r\n        var topics = $firebaseObject(ref)\r\n        var topicsArr = $firebaseArray(ref)\r\n        var topicKey = '';\r\n\r\n        var Topics = {\r\n\r\n            // Reply listing\r\n            userUrl: function (user_uuid){\r\n                return ref.child('user/'+user_uuid)\r\n            },\r\n            replyList: function (topic_uuid) {\r\n                var data = ref.child(topic_uuid + '/replies');\r\n                console.log(data);\r\n                return $firebaseArray(data)\r\n            },\r\n            ref: ref\r\n        }\r\n        return Topics;\r\n\r\n    })\r\n","angular.module('App')\r\n    .controller('ProfileCtrl',function($http,$mdToast,$timeout, $mdSidenav, $log){\r\n\r\n        var profileCtrl = this;\r\n\r\n        profileCtrl.profileDescription  =   '';\r\n        profileCtrl.notificationList    =   '';\r\n        profileCtrl.unreadNotification  =   0;\r\n        profileCtrl.userBookmark        =   0;\r\n\r\n        profileCtrl.toggleRight = buildToggler('alertSideNav');\r\n        profileCtrl.isOpenRight = function(){\r\n            return $mdSidenav('alertSideNav').isOpen();\r\n        };\r\n\r\n\r\n        var last = {\r\n            bottom: false,\r\n            top: true,\r\n            left: false,\r\n            right: true\r\n        };\r\n\r\n        profileCtrl.toastPosition = angular.extend({},last);\r\n        profileCtrl.getToastPosition = function() {\r\n            sanitizePosition();\r\n            return Object.keys(profileCtrl.toastPosition)\r\n                .filter(function(pos) { return profileCtrl.toastPosition[pos]; })\r\n                .join(' ');\r\n        };\r\n        function sanitizePosition() {\r\n            var current = profileCtrl.toastPosition;\r\n            if ( current.bottom && last.top ) current.top = false;\r\n            if ( current.top && last.bottom ) current.bottom = false;\r\n            if ( current.right && last.left ) current.left = false;\r\n            if ( current.left && last.right ) current.right = false;\r\n            last = angular.extend({},current);\r\n        }\r\n\r\n\r\n        profileCtrl.getUserStat = function(uuid)\r\n        {\r\n            var ref = new Firebase(\"https://qanya.firebaseio.com/user/\"+uuid+\"/stat/\");\r\n            ref.on(\"value\", function(snapshot) {\r\n                profileCtrl.userFollower = snapshot.val().follower;\r\n                profileCtrl.userUpvoted  = snapshot.val().upvote;\r\n            })\r\n        }\r\n\r\n\r\n        profileCtrl.profileImage = function(files)\r\n        {\r\n            angular.forEach(files, function(flowFile, i){\r\n                console.log(flowFile);\r\n                var fileReader = new FileReader();\r\n                fileReader.onload = function (event) {\r\n                    var uri = event.target.result;\r\n                    //profileCtrl.imageStrings[i] = uri;\r\n                    $.post( \"/api/previewImage/\", { data: uri} )\r\n                        .done(function( response ) {\r\n                            $http.post( \"/upload-profileImage\", { img: response} )\r\n                                .then(function( response ) {\r\n                                    $('#profilePhoto').attr( \"src\", response.data);\r\n                                    $mdToast.show(\r\n                                        $mdToast.simple()\r\n                                            .textContent('Save')\r\n                                            .position(profileCtrl.getToastPosition())\r\n                                            .hideDelay(3000)\r\n                                    );\r\n                                });\r\n                        });\r\n                };\r\n                fileReader.readAsDataURL(flowFile.file);\r\n            });\r\n        }\r\n\r\n        //List out notification\r\n        profileCtrl.listNotification = function()\r\n        {\r\n            $http.post('/list-notification')\r\n                .then(function(response){\r\n                    console.log(response);\r\n                    profileCtrl.notificationList = response.data;\r\n                });\r\n        }\r\n\r\n        //Acknowledge notification\r\n        profileCtrl.ackNotificataion = function()\r\n        {\r\n            $http.post('/ackNotification')\r\n                .then(function(response){\r\n                    profileCtrl.unreadNotification = response.data;\r\n                });\r\n        }\r\n\r\n        //Get the number of unread notificaiton\r\n        profileCtrl.userNotification = function()\r\n        {\r\n            $http.post('/getNotification')\r\n                .then(function(response){\r\n                    profileCtrl.unreadNotification = response.data;\r\n                });\r\n        }\r\n\r\n        profileCtrl.updateDescription = function()\r\n        {\r\n            $http.post('/user/update-description',\r\n                {name: $('#profileDescription').html()})\r\n                .then(function(response){\r\n\r\n                    $mdToast.show(\r\n                        $mdToast.simple()\r\n                            .textContent('Save!')\r\n                            .position('top right')\r\n                            .hideDelay(3000)\r\n                    );\r\n                });\r\n        }\r\n\r\n        profileCtrl.getUserBookmark = function(user_uuid)\r\n        {\r\n            var ref = new Firebase(\"https://qanya.firebaseio.com/user/\"+user_uuid+\"/bookmark\");\r\n            ref.on(\"value\",function (snapshot) {\r\n\r\n                $http.post('/user/getBookmark',\r\n                    {data: snapshot.val()})\r\n                    .then(function(response){\r\n                        console.log(response);\r\n                        $('#userBookmark').html(response.data);\r\n                    })\r\n\r\n                //profileCtrl.userBookmark = snapshot.val();\r\n            });\r\n        }\r\n\r\n        profileCtrl.getUserHistory = function(user_uuid)\r\n        {\r\n            var ref = new Firebase(\"https://qanya.firebaseio.com/user/\"+user_uuid+\"/history\");\r\n            ref.on(\"value\",function (snapshot) {\r\n\r\n                $http.post('/user/getHistory',\r\n                    {data: snapshot.val()})\r\n                    .then(function(response){\r\n                        $('#userViewHistory').html(response.data);\r\n                    })\r\n            });\r\n        }\r\n\r\n        //Toggle sidebar\r\n        function buildToggler(navID) {\r\n            return function() {\r\n                $mdSidenav(navID)\r\n                    .toggle()\r\n                    .then(function () {\r\n                        $log.debug(\"toggle \" + navID + \" is done\");\r\n                    });\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n"],"sourceRoot":"/source/"}